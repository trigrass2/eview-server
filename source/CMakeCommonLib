#Setting Executable and Library Output Path
#if lib type is shared library

IF(LIB_TYPE MATCHES "SHARED")
    IF(${NOAUTORCFILE} MATCHES "1")
        MESSAGE("212${NOAUTORCFILE}") 
    ELSE()
        INCLUDE(${CMAKE_CURRENT_LIST_DIR}/AddVersionResource)
    ENDIF()
ENDIF(LIB_TYPE MATCHES "SHARED")
INCLUDE(${CMAKE_CURRENT_LIST_DIR}/CMakeCommon)

ADD_LIBRARY(${TARGET_NAME} ${LIB_TYPE} ${SRCS})

# AddLinuxVersionResouce
IF(LIB_TYPE MATCHES "SHARED")
	IF(UNIX)
		#SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES SOVERSION ${TARGET_API_VERSION} VERSION ${TARGET_VERSION} )
	ENDIF(UNIX)
ENDIF(LIB_TYPE MATCHES "SHARED")

#if lib type is shared library
IF(LIB_TYPE MATCHES "SHARED")
	##############################################################################################################
	# Add this to Resolve "relocations remain against allocatable but non-writable sections and relocation error"#
	##############################################################################################################	
	IF(UNIX)
		IF(CMAKE_SYSTEM MATCHES "SunOS.*")
			SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")
		ENDIF(CMAKE_SYSTEM MATCHES "SunOS.*")

		IF(${CMAKE_SYSTEM_NAME} MATCHES HP-UX)
			SET(LINK_LIBS ${LINK_LIBS} Csup std_v2)
		ENDIF(${CMAKE_SYSTEM_NAME} MATCHES HP-UX)
	ENDIF(UNIX)	
	
	TARGET_LINK_LIBRARIES(${TARGET_NAME} ${LINK_LIBS})
ENDIF(LIB_TYPE MATCHES "SHARED")

IF(LIB_TYPE MATCHES "STATIC")
        IF(${CMAKE_SYSTEM_NAME} MATCHES Linux)
                #  MESSAGE(${TARGET_NAME} ":" ${CMAKE_SYSTEM_NAME})
                SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
                SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
                #  SET_SOURCE_FILES_PROPERTIES(${_SOURCE} PROPERTIES COMPILE_FLAGS "-fPIC")
                #  SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES COMPILE_FLAGS "-fPIC")
        ENDIF(${CMAKE_SYSTEM_NAME} MATCHES Linux)

		IF(CMAKE_SYSTEM MATCHES "SunOS.*")
			SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -xcode=pic32")
			SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -xcode=pic32")
		ENDIF(CMAKE_SYSTEM MATCHES "SunOS.*")
ENDIF(LIB_TYPE MATCHES "STATIC")

IF(UNIX)
ELSE(UNIX)
	#add /MP (MultiProcessor) Option to increase building speed!
	SET_TARGET_PROPERTIES( ${TARGET_NAME} PROPERTIES COMPILE_FLAGS "/MP" ) 
ENDIF(UNIX)

SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO  "/Od /Ob1 /Zi")
SET(CMAKE_C_FLAGS_RELWITHDEBINFO  "/Od /Ob1 /Zi")
#message (${CMAKE_CXX_FLAGS_RELWITHDEBUGINFO})

IF(${CMAKE_SYSTEM_NAME} MATCHES Linux)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wl,-Bsymbolic")
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES Linux)

